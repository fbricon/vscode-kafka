{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "kafka",
    "fileTypes": [
        ".kafka"
    ],
    "scopeName": "source.kafka",
    "injections": {
        "L:support.type.property-name.json, L:string.quoted.double.json": {
            "comment": "Mustache patterns to inject the support.type.property-name.json and string.quoted.double.json scopes",
            "patterns": [
                {
                    "include": "source.kafka#kafka.value.mustache.variables"
                }
            ]
        }
    },
    "patterns": [
        {
            "include": "#kafka.producerdefinitionline"
        },
        {
            "include": "#kafka.headerdefinitionline"
        },
        {
            "include": "#kafka.separator"
        },
        {
            "include": "#kafka.commentline"
        },
        {
            "include": "#kafka.value.mustache.variables"
        },
        {
            "include": "#kafka.value.json"
        }
    ],
    "repository": {
        "kafka.producerdefinitionline": {
            "patterns": [
                {
                    "name": "kafka.producerdefinition",
                    "match": "(?i)^(?:(producer)\\s*)([a-zA-Z\\-]+)?$",
                    "captures": {
                        "1": {
                            "name": "keyword.control.kafka.producer"
                        },
                        "2": {
                            "name": "kafka.producer.definition.identifier"
                        }
                    }
                }
            ]
        },
        "kafka.headerdefinitionline": {
            "patterns": [
                {
                    "name": "kafka.headerdefinition",
                    "match": "(?i)^(?:(topic|key):\\s*)([a-zA-Z0-9\\-\\.\\_]+)?$",
                    "captures": {
                        "1": {
                            "name": "support.variable.kafka"
                        },
                        "2": {
                            "name": "kafka.header.identifier"
                        }
                    }
                }
            ]
        },
        "kafka.value.mustache.variables": {
            "comment": "Syntax coloration for Mustache tag variables used by fakerjs (ex : {{random.uuid}} )",
            "patterns": [
                {
                    "begin": "\\s*(?:(\\{\\{))",
                    "end": "\\s*(?=(\\}\\}))",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.tag.variables.begin.mustache"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.definition.tag.variables.end.mustache"
                        }
                    },
                    "name": "entity.name.tag.variables.mustache"
                }
            ]
        },
        "kafka.value.json": {
            "patterns": [
                {
                    "begin": "\\s*(?=(\\[|{[^{]))",
                    "end": "\\s*(?=(\\]|}[^}}))",
                    "include": "source.json"
                }
            ]
        },
        "kafka.separator": {
            "patterns": [
                {
                    "name": "keyword.other.separator",
                    "match": "^###$"
                }
            ]
        },
        "kafka.commentline": {
            "patterns": [
                {
                    "name": "comment.line.hash",
                    "match": "^--.*"
                }
            ]
        }
    }
}